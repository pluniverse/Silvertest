{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\b20lo\\\\Documents\\\\GitHub\\\\Silvertest\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AudioPlayer from \"./components/AudioPlayer\";\nimport Footer from \"./components/Footer\";\nimport HeroPluniverse from \"./components/HeroPluniverse\";\nimport NavBar from './components/NavBar';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 4000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: color,\n      loading: loading,\n      size: 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeroPluniverse, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bp7W7BLZaxNmS0ceaCBH82+KoGQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/b20lo/Documents/GitHub/Silvertest/src/App.js"],"names":["React","useState","useEffect","AudioPlayer","Footer","HeroPluniverse","NavBar","ClipLoader","App","loading","setLoading","setTimeout","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACbQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,UAAU,CAAC,MAAK;AACdD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEID,OAAO,gBACP,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEG,KAAnB;AAA0B,MAAA,OAAO,EAAEH,OAAnC;AAA4C,MAAA,IAAI,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzBQD,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport AudioPlayer from \"./components/AudioPlayer\";\nimport Footer from \"./components/Footer\";\nimport HeroPluniverse from \"./components/HeroPluniverse\";\nimport NavBar from './components/NavBar'\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(()=> {\n    setLoading(true)\n    setTimeout(() =>{\n      setLoading(false)\n    }, 4000)\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {\n        loading ?\n        <ClipLoader color={color} loading={loading} size={30} />\n        :\n        <div className=\"container\">\n        <NavBar/>\n        <AudioPlayer/>\n        <HeroPluniverse />\n        <Footer/>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}